<?xml version="1.0" encoding="utf-8"?>
<project name="QFlow" default="">
  <!--property name="Csc.Setting.Build.VisualStudioVersion" value="VS2015" /-->
  <!--property name="Csc.Setting.MSBuild.SolutionPath" value="${CcnetConfig.SourcesRootDirectory}\Source\QFlow.sln" /-->
  <property name="Csc.Setting.NUnit.Path" value="C:\Program Files\NUnit 2.5.10\bin\net-2.0\nunit-console.exe" />
  <include buildfile="${CcnetConfig.BuildToolsDirectory}\BuildScripts\Creuna.BuildTools.NAnt.xml" />

  <target name="Target.DotNetBuild" description="">
    <!--property name="Csc.Setting.Simian.Path" value="" /-->
    <!--property name="Csc.Setting.SourceMonitor.Path" value="" /-->


	
  
	<call target="DotNet.Restore" />
	<call target="DotNet.Publish" />

   <if test="${Csc.Setting.Build.TargetEnvironment == 'Development'}">
	    
	    <property name="Csc.Setting.RebuildDeploy.WebProjectName" value="QFlow" />
	    <property name="Csc.Setting.Build.DeployDirectory" value="\\192.168.0.208\Inetpub\ukad\2017\QFlow.Development" />

      <call target="Target.Deploy" />
    </if>
	

	
   </target>
   
   
   
   
   
   
   <target name="DotNet.Restore">

    <exec program="C:\Program Files\dotnet\dotnet.exe" workingdir="${CcnetConfig.SourcesRootDirectory}\Source\${Csc.Setting.RebuildDeploy.WebProjectName}" >
      <arg value="restore" />
    </exec>


  </target>
  
  
   
   <target name="DotNet.Publish">

    <exec program="C:\Program Files\dotnet\dotnet.exe" workingdir="${CcnetConfig.SourcesRootDirectory}\Source\${Csc.Setting.RebuildDeploy.WebProjectName}" >
     <arg value="publish" />
	 <arg value="-c" />
	 <arg value="Release" />
	 <arg value="-o" />
	 <arg value="${Csc.Setting.MSBuild.OutputBuildDirectory}\_PublishedWebsites\QFlow" />
    </exec>


  </target>
  
  
   
   
   <target name="Target.Deploy">
     <!-- Run robocopy -->
	 
	  <property name="Csc.Setting.Robocopy.ExcludeDirectoryList" value="App_Data,media,Brochures,Resources"  />
    <property name="Csc.Setting.Robocopy.ToDirectory" value="${Csc.Setting.Build.DeployDirectory}" if="${Csc.Setting.Robocopy.ToDirectory == ''}" />

    <if test="${Csc.Setting.Robocopy.ToDirectory != ''}">
      <fail message="The required property 'Csc.Setting.RebuildDeploy.WebProjectName' has not been defined." unless="${Csc.Setting.RebuildDeploy.WebProjectName != ''}" />

      <property name="Csc.Setting.Robocopy.LogPath" value="${Csc.Setting.Build.LogDirectory}\Robocopy\Deploy.log" />
      <property name="Csc.Property.RebuildDeploy.RobocopyPurge" value="${Csc.Setting.Robocopy.Purge}" />
      <property name="Csc.Setting.Robocopy.Purge" value="True" />

      <property name="Csc.Setting.Robocopy.FromDirectory" value="${Csc.Setting.MSBuild.OutputBuildDirectory}\_PublishedWebsites\${Csc.Setting.RebuildDeploy.WebProjectName}" />
      <call target="Csc.Target.Robocopy" />

      <property name="Csc.Setting.Robocopy.Purge" value="${Csc.Property.RebuildDeploy.RobocopyPurge}" />
    </if>
	
     <!-- copy folder Media only-->
     <!--property name="Csc.Setting.Robocopy.LogPath" value="${Csc.Setting.Build.LogDirectory}\Robocopy\DeployMedia.log" />
     <property name="Csc.Setting.Robocopy.ExcludeDirectoryList" value=""  />
     <property name="Csc.Setting.Robocopy.FromDirectory" value="${Csc.Setting.MSBuild.OutputBuildDirectory}\_PublishedWebsites\${Csc.Setting.RebuildDeploy.WebProjectName}\Media" />
     <property name="Csc.Setting.Robocopy.ToDirectory" value="${Csc.Setting.Build.DeployDirectory}\Media" />
     <property name="Csc.Setting.Robocopy.Purge" value="False" />
     <call target="Csc.Target.Robocopy" /-->
	 
	
   </target>
   
   

</project>
